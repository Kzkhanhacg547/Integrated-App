const axios = require('axios');
const fs = require('fs');
const path = require('path');

const is_url = url => /^http(s)?:\/\//.test(url);

exports.config = {
  name: 'tiktok',
  version: '0.0.3',
  hasPermssion: 0,
  credits: '',
  description: 'Fetch media information from TikTok links',
  commandCategory: 'System',
  usages: 'tiktok <link>',
  cooldowns: 0
};

exports.run = async ({ args }) => {
  try {
    const url = args[0];
    if (!is_url(url)) {
      return { message: 'Invalid URL' };
    }
    if (/tiktok.com/.test(url)) {
      const apiUrl = `https://www.tikwm.com/api/?url=${url}`;
      const response = await axios.get(apiUrl);
      if (response.data.code !== 0) {
        throw new Error('Failed to fetch TikTok data');
      }

      const tiktokData = response.data.data;
      const videoUrl = tiktokData.play;

      // Download the video
      const videoResponse = await axios({
        method: 'get',
        url: videoUrl,
        responseType: 'stream'
      });

      const videoPath = path.join('cache', 'tiktok_video.mp4');
      const writer = fs.createWriteStream(videoPath);

      videoResponse.data.pipe(writer);

      return new Promise((resolve, reject) => {
        writer.on('finish', () => {
          resolve({
            message: `TikTok Video\n- Title: ${tiktokData.title}\n- Author: ${tiktokData.author.nickname}\n- Video saved to ${videoPath}`,
            videoUrl: videoPath
          });
        });

        writer.on('error', reject);
      });
    } else {
      return { message: 'Unsupported URL. Please provide a valid TikTok video link.' };
    }
  } catch (error) {
    console.error(`Error processing command: ${error}`);
    return { message: 'An error occurred while processing your request' };
  }
};